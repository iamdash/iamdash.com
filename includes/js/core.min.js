(function(a) {
  jQuery.browser.mobile = /android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|e\-|e\/|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\-|2|g)|yas\-|your|zeto|zte\-/i.test(a.substr(0, 
  4))
})(navigator.userAgent || navigator.vendor || window.opera);
(function($) {
  function getViewportHeight() {
    var height = window.innerHeight;
    var mode = document.compatMode;
    if(mode || !$.support.boxModel) {
      height = mode == "CSS1Compat" ? document.documentElement.clientHeight : document.body.clientHeight
    }
    return height
  }
  $(window).scroll(function() {
    var vpH = getViewportHeight(), scrolltop = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop, elems = [];
    $.each($.cache, function() {
      if(this.events && this.events.inview) {
        elems.push(this.handle.elem)
      }
    });
    if(elems.length) {
      $(elems).each(function() {
        var $el = $(this), top = $el.offset().top, height = $el.height(), inview = $el.data("inview") || false;
        if(scrolltop > top + height || scrolltop + vpH < top) {
          if(inview) {
            $el.data("inview", false);
            $el.trigger("inview", [false])
          }
        }else {
          if(scrolltop < top + height) {
            if(!inview) {
              $el.data("inview", true);
              $el.trigger("inview", [true])
            }
          }
        }
      })
    }
  });
  $(function() {
    $(window).scroll()
  })
})(jQuery);
(function($) {
  var URI = location.href.replace(/#.*/, "");
  var $localScroll = $.localScroll = function(settings) {
    $("body").localScroll(settings)
  };
  $localScroll.defaults = {duration:1E3, axis:"y", event:"click", stop:true, target:window, reset:true, hash:true};
  $localScroll.hash = function(settings) {
    if(location.hash) {
      settings = $.extend({}, $localScroll.defaults, settings);
      settings.hash = false;
      if(settings.reset) {
        var d = settings.duration;
        delete settings.duration;
        $(settings.target).scrollTo(0, settings);
        settings.duration = d
      }
      scroll(0, location, settings)
    }
  };
  $.fn.localScroll = function(settings) {
    settings = $.extend({}, $localScroll.defaults, settings);
    return settings.lazy ? this.bind(settings.event, function(e) {
      var a = $([e.target, e.target.parentNode]).filter(filter)[0];
      if(a) {
        scroll(e, a, settings)
      }
    }) : this.find("a,area").filter(filter).bind(settings.event, function(e) {
      scroll(e, this, settings)
    }).end().end();
    function filter() {
      return!!this.href && !!this.hash && this.href.replace(this.hash, "") == URI && (!settings.filter || $(this).is(settings.filter))
    }
  };
  function scroll(e, link, settings) {
    var id = link.hash.slice(1), elem = document.getElementById(id) || document.getElementsByName(id)[0];
    if(!elem) {
      return
    }
    if(e) {
      e.preventDefault()
    }
    var $target = $(settings.target);
    if(settings.lock && $target.is(":animated") || settings.onBefore && settings.onBefore.call(settings, e, elem, $target) === false) {
      return
    }
    if(settings.stop) {
      $target.stop(true)
    }
    if(settings.hash) {
      var attr = elem.id == id ? "id" : "name", $a = $("<a> </a>").attr(attr, id).css({position:"absolute", top:$(window).scrollTop(), left:$(window).scrollLeft()});
      elem[attr] = "";
      $("body").prepend($a);
      location = link.hash;
      $a.remove();
      elem[attr] = id
    }
    $target.scrollTo(elem, settings).trigger("notify.serialScroll", [elem])
  }
})(jQuery);
(function($) {
  var $scrollTo = $.scrollTo = function(target, duration, settings) {
    $(window).scrollTo(target, duration, settings)
  };
  $scrollTo.defaults = {axis:"xy", duration:parseFloat($.fn.jquery) >= 1.3 ? 0 : 1};
  $scrollTo.window = function(scope) {
    return $(window)._scrollable()
  };
  $.fn._scrollable = function() {
    return this.map(function() {
      var elem = this, isWin = !elem.nodeName || $.inArray(elem.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"]) != -1;
      if(!isWin) {
        return elem
      }
      var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;
      return $.browser.safari || doc.compatMode == "BackCompat" ? doc.body : doc.documentElement
    })
  };
  $.fn.scrollTo = function(target, duration, settings) {
    if(typeof duration == "object") {
      settings = duration;
      duration = 0
    }
    if(typeof settings == "function") {
      settings = {onAfter:settings}
    }
    if(target == "max") {
      target = 9E9
    }
    settings = $.extend({}, $scrollTo.defaults, settings);
    duration = duration || settings.speed || settings.duration;
    settings.queue = settings.queue && settings.axis.length > 1;
    if(settings.queue) {
      duration /= 2
    }
    settings.offset = both(settings.offset);
    settings.over = both(settings.over);
    return this._scrollable().each(function() {
      var elem = this, $elem = $(elem), targ = target, toff, attr = {}, win = $elem.is("html,body");
      switch(typeof targ) {
        case "number":
        ;
        case "string":
          if(/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
            targ = both(targ);
            break
          }
          targ = $(targ, this);
        case "object":
          if(targ.is || targ.style) {
            toff = (targ = $(targ)).offset()
          }
      }
      $.each(settings.axis.split(""), function(i, axis) {
        var Pos = axis == "x" ? "Left" : "Top", pos = Pos.toLowerCase(), key = "scroll" + Pos, old = elem[key], max = $scrollTo.max(elem, axis);
        if(toff) {
          attr[key] = toff[pos] + (win ? 0 : old - $elem.offset()[pos]);
          if(settings.margin) {
            attr[key] -= parseInt(targ.css("margin" + Pos)) || 0;
            attr[key] -= parseInt(targ.css("border" + Pos + "Width")) || 0
          }
          attr[key] += settings.offset[pos] || 0;
          if(settings.over[pos]) {
            attr[key] += targ[axis == "x" ? "width" : "height"]() * settings.over[pos]
          }
        }else {
          var val = targ[pos];
          attr[key] = val.slice && val.slice(-1) == "%" ? parseFloat(val) / 100 * max : val
        }
        if(/^\d+$/.test(attr[key])) {
          attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max)
        }
        if(!i && settings.queue) {
          if(old != attr[key]) {
            animate(settings.onAfterFirst)
          }
          delete attr[key]
        }
      });
      animate(settings.onAfter);
      function animate(callback) {
        $elem.animate(attr, duration, settings.easing, callback && function() {
          callback.call(this, target, settings)
        })
      }
    }).end()
  };
  $scrollTo.max = function(elem, axis) {
    var Dim = axis == "x" ? "Width" : "Height", scroll = "scroll" + Dim;
    if(!$(elem).is("html,body")) {
      return elem[scroll] - $(elem)[Dim.toLowerCase()]()
    }
    var size = "client" + Dim, html = elem.ownerDocument.documentElement, body = elem.ownerDocument.body;
    return Math.max(html[scroll], body[scroll]) - Math.min(html[size], body[size])
  };
  function both(val) {
    return typeof val == "object" ? val : {top:val, left:val}
  }
})(jQuery);
(function($) {
  var $serialScroll = $.serialScroll = function(settings) {
    $.scrollTo.window().serialScroll(settings)
  };
  $serialScroll.defaults = {duration:1E3, axis:"x", event:"click", start:0, step:1, lock:true, cycle:true, constant:true};
  $.fn.serialScroll = function(settings) {
    settings = $.extend({}, $serialScroll.defaults, settings);
    var event = settings.event, step = settings.step, lazy = settings.lazy;
    return this.each(function() {
      var context = settings.target ? this : document, $pane = $(settings.target || this, context), pane = $pane[0], items = settings.items, active = settings.start, auto = settings.interval, nav = settings.navigation, timer;
      if(!lazy) {
        items = getItems()
      }
      if(settings.force) {
        jump({}, active)
      }
      $(settings.prev || [], context).bind(event, -step, move);
      $(settings.next || [], context).bind(event, step, move);
      if(!pane.ssbound) {
        $pane.bind("prev.serialScroll", -step, move).bind("next.serialScroll", step, move).bind("goto.serialScroll", jump)
      }
      if(auto) {
        $pane.bind("start.serialScroll", function(e) {
          if(!auto) {
            clear();
            auto = true;
            next()
          }
        }).bind("stop.serialScroll", function() {
          clear();
          auto = false
        })
      }
      $pane.bind("notify.serialScroll", function(e, elem) {
        var i = index(elem);
        if(i > -1) {
          active = i
        }
      });
      pane.ssbound = true;
      if(settings.jump) {
        (lazy ? $pane : getItems()).bind(event, function(e) {
          jump(e, index(e.target))
        })
      }
      if(nav) {
        nav = $(nav, context).bind(event, function(e) {
          e.data = Math.round(getItems().length / nav.length) * nav.index(this);
          jump(e, this)
        })
      }
      function move(e) {
        e.data += active;
        jump(e, this)
      }
      function jump(e, button) {
        if(!isNaN(button)) {
          e.data = button;
          button = pane
        }
        var pos = e.data, n, real = e.type, $items = settings.exclude ? getItems().slice(0, -settings.exclude) : getItems(), limit = $items.length, elem = $items[pos], duration = settings.duration;
        if(real) {
          e.preventDefault()
        }
        if(auto) {
          clear();
          timer = setTimeout(next, settings.interval)
        }
        if(!elem) {
          n = pos < 0 ? 0 : limit - 1;
          if(active != n) {
            pos = n
          }else {
            if(!settings.cycle) {
              return
            }else {
              pos = limit - n - 1
            }
          }
          elem = $items[pos]
        }
        if(!elem || real && active == pos || settings.lock && $pane.is(":animated") || real && settings.onBefore && settings.onBefore.call(button, e, elem, $pane, getItems(), pos) === false) {
          return
        }
        if(settings.stop) {
          $pane.queue("fx", []).stop()
        }
        if(settings.constant) {
          duration = Math.abs(duration / step * (active - pos))
        }
        $pane.scrollTo(elem, duration, settings).trigger("notify.serialScroll", [pos])
      }
      function next() {
        $pane.trigger("next.serialScroll")
      }
      function clear() {
        clearTimeout(timer)
      }
      function getItems() {
        return $(items, pane)
      }
      function index(elem) {
        if(!isNaN(elem)) {
          return elem
        }
        var $items = getItems(), i;
        while((i = $items.index(elem)) == -1 && elem != pane) {
          elem = elem.parentNode
        }
        return i
      }
    })
  }
})(jQuery);
jQuery.easing["jswing"] = jQuery.easing["swing"];
jQuery.extend(jQuery.easing, {def:"easeOutQuad", swing:function(x, t, b, c, d) {
  return jQuery.easing[jQuery.easing.def](x, t, b, c, d)
}, easeInQuad:function(x, t, b, c, d) {
  return c * (t /= d) * t + b
}, easeOutQuad:function(x, t, b, c, d) {
  return-c * (t /= d) * (t - 2) + b
}, easeInOutQuad:function(x, t, b, c, d) {
  if((t /= d / 2) < 1) {
    return c / 2 * t * t + b
  }
  return-c / 2 * (--t * (t - 2) - 1) + b
}, easeInCubic:function(x, t, b, c, d) {
  return c * (t /= d) * t * t + b
}, easeOutCubic:function(x, t, b, c, d) {
  return c * ((t = t / d - 1) * t * t + 1) + b
}, easeInOutCubic:function(x, t, b, c, d) {
  if((t /= d / 2) < 1) {
    return c / 2 * t * t * t + b
  }
  return c / 2 * ((t -= 2) * t * t + 2) + b
}, easeInQuart:function(x, t, b, c, d) {
  return c * (t /= d) * t * t * t + b
}, easeOutQuart:function(x, t, b, c, d) {
  return-c * ((t = t / d - 1) * t * t * t - 1) + b
}, easeInOutQuart:function(x, t, b, c, d) {
  if((t /= d / 2) < 1) {
    return c / 2 * t * t * t * t + b
  }
  return-c / 2 * ((t -= 2) * t * t * t - 2) + b
}, easeInQuint:function(x, t, b, c, d) {
  return c * (t /= d) * t * t * t * t + b
}, easeOutQuint:function(x, t, b, c, d) {
  return c * ((t = t / d - 1) * t * t * t * t + 1) + b
}, easeInOutQuint:function(x, t, b, c, d) {
  if((t /= d / 2) < 1) {
    return c / 2 * t * t * t * t * t + b
  }
  return c / 2 * ((t -= 2) * t * t * t * t + 2) + b
}, easeInSine:function(x, t, b, c, d) {
  return-c * Math.cos(t / d * (Math.PI / 2)) + c + b
}, easeOutSine:function(x, t, b, c, d) {
  return c * Math.sin(t / d * (Math.PI / 2)) + b
}, easeInOutSine:function(x, t, b, c, d) {
  return-c / 2 * (Math.cos(Math.PI * t / d) - 1) + b
}, easeInExpo:function(x, t, b, c, d) {
  return t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b
}, easeOutExpo:function(x, t, b, c, d) {
  return t == d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b
}, easeInOutExpo:function(x, t, b, c, d) {
  if(t == 0) {
    return b
  }
  if(t == d) {
    return b + c
  }
  if((t /= d / 2) < 1) {
    return c / 2 * Math.pow(2, 10 * (t - 1)) + b
  }
  return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b
}, easeInCirc:function(x, t, b, c, d) {
  return-c * (Math.sqrt(1 - (t /= d) * t) - 1) + b
}, easeOutCirc:function(x, t, b, c, d) {
  return c * Math.sqrt(1 - (t = t / d - 1) * t) + b
}, easeInOutCirc:function(x, t, b, c, d) {
  if((t /= d / 2) < 1) {
    return-c / 2 * (Math.sqrt(1 - t * t) - 1) + b
  }
  return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b
}, easeInElastic:function(x, t, b, c, d) {
  var s = 1.70158;
  var p = 0;
  var a = c;
  if(t == 0) {
    return b
  }
  if((t /= d) == 1) {
    return b + c
  }
  if(!p) {
    p = d * 0.3
  }
  if(a < Math.abs(c)) {
    a = c;
    var s = p / 4
  }else {
    var s = p / (2 * Math.PI) * Math.asin(c / a)
  }
  return-(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * 2 * Math.PI / p)) + b
}, easeOutElastic:function(x, t, b, c, d) {
  var s = 1.70158;
  var p = 0;
  var a = c;
  if(t == 0) {
    return b
  }
  if((t /= d) == 1) {
    return b + c
  }
  if(!p) {
    p = d * 0.3
  }
  if(a < Math.abs(c)) {
    a = c;
    var s = p / 4
  }else {
    var s = p / (2 * Math.PI) * Math.asin(c / a)
  }
  return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * 2 * Math.PI / p) + c + b
}, easeInOutElastic:function(x, t, b, c, d) {
  var s = 1.70158;
  var p = 0;
  var a = c;
  if(t == 0) {
    return b
  }
  if((t /= d / 2) == 2) {
    return b + c
  }
  if(!p) {
    p = d * 0.3 * 1.5
  }
  if(a < Math.abs(c)) {
    a = c;
    var s = p / 4
  }else {
    var s = p / (2 * Math.PI) * Math.asin(c / a)
  }
  if(t < 1) {
    return-0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * 2 * Math.PI / p) + b
  }
  return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * 2 * Math.PI / p) * 0.5 + c + b
}, easeInBack:function(x, t, b, c, d, s) {
  if(s == undefined) {
    s = 1.70158
  }
  return c * (t /= d) * t * ((s + 1) * t - s) + b
}, easeOutBack:function(x, t, b, c, d, s) {
  if(s == undefined) {
    s = 1.70158
  }
  return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b
}, easeInOutBack:function(x, t, b, c, d, s) {
  if(s == undefined) {
    s = 1.70158
  }
  if((t /= d / 2) < 1) {
    return c / 2 * t * t * (((s *= 1.525) + 1) * t - s) + b
  }
  return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b
}, easeInBounce:function(x, t, b, c, d) {
  return c - jQuery.easing.easeOutBounce(x, d - t, 0, c, d) + b
}, easeOutBounce:function(x, t, b, c, d) {
  if((t /= d) < 1 / 2.75) {
    return c * 7.5625 * t * t + b
  }else {
    if(t < 2 / 2.75) {
      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b
    }else {
      if(t < 2.5 / 2.75) {
        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b
      }else {
        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b
      }
    }
  }
}, easeInOutBounce:function(x, t, b, c, d) {
  if(t < d / 2) {
    return jQuery.easing.easeInBounce(x, t * 2, 0, c, d) * 0.5 + b
  }
  return jQuery.easing.easeOutBounce(x, t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b
}});
(function($) {
  function getViewportHeight() {
    var height = window.innerHeight;
    var mode = document.compatMode;
    if(mode || !$.support.boxModel) {
      height = mode == "CSS1Compat" ? document.documentElement.clientHeight : document.body.clientHeight
    }
    return height
  }
  $(window).scroll(function() {
    var vpH = getViewportHeight(), scrolltop = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop, elems = [];
    $.each($.cache, function() {
      if(this.events && this.events.inview) {
        elems.push(this.handle.elem)
      }
    });
    if(elems.length) {
      $(elems).each(function() {
        var $el = $(this), top = $el.offset().top, height = $el.height(), inview = $el.data("inview") || false;
        if(scrolltop > top + height || scrolltop + vpH < top) {
          if(inview) {
            $el.data("inview", false);
            $el.trigger("inview", [false])
          }
        }else {
          if(scrolltop < top + height) {
            if(!inview) {
              $el.data("inview", true);
              $el.trigger("inview", [true])
            }
          }
        }
      })
    }
  });
  $(function() {
    $(window).scroll()
  })
})(jQuery);
(function($) {
  function maybeCall(thing, ctx) {
    return typeof thing == "function" ? thing.call(ctx) : thing
  }
  function Tipsy(element, options) {
    this.$element = $(element);
    this.options = options;
    this.enabled = true;
    this.fixTitle()
  }
  Tipsy.prototype = {show:function() {
    var title = this.getTitle();
    if(title && this.enabled) {
      var $tip = this.tip();
      $tip.find(".tipsy-inner")[this.options.html ? "html" : "text"](title);
      $tip[0].className = "tipsy";
      $tip.remove().css({top:0, left:0, visibility:"hidden", display:"block"}).prependTo(document.body);
      var pos = $.extend({}, this.$element.offset(), {width:this.$element[0].offsetWidth, height:this.$element[0].offsetHeight});
      var actualWidth = $tip[0].offsetWidth, actualHeight = $tip[0].offsetHeight, gravity = maybeCall(this.options.gravity, this.$element[0]);
      var tp;
      switch(gravity.charAt(0)) {
        case "n":
          tp = {top:pos.top + pos.height + this.options.offset, left:pos.left + pos.width / 2 - actualWidth / 2};
          break;
        case "s":
          tp = {top:pos.top - actualHeight - this.options.offset, left:pos.left + pos.width / 2 - actualWidth / 2};
          break;
        case "e":
          tp = {top:pos.top + pos.height / 2 - actualHeight / 2, left:pos.left - actualWidth - this.options.offset};
          break;
        case "w":
          tp = {top:pos.top + pos.height / 2 - actualHeight / 2, left:pos.left + pos.width + this.options.offset};
          break
      }
      if(gravity.length == 2) {
        if(gravity.charAt(1) == "w") {
          tp.left = pos.left + pos.width / 2 - 15
        }else {
          tp.left = pos.left + pos.width / 2 - actualWidth + 15
        }
      }
      $tip.css(tp).addClass("tipsy-" + gravity);
      $tip.find(".tipsy-arrow")[0].className = "tipsy-arrow tipsy-arrow-" + gravity.charAt(0);
      if(this.options.className) {
        $tip.addClass(maybeCall(this.options.className, this.$element[0]))
      }
      if(this.options.fade) {
        $tip.stop().css({opacity:0, display:"block", visibility:"visible"}).animate({opacity:this.options.opacity})
      }else {
        $tip.css({visibility:"visible", opacity:this.options.opacity})
      }
    }
  }, hide:function() {
    if(this.options.fade) {
      this.tip().stop().fadeOut(function() {
        $(this).remove()
      })
    }else {
      this.tip().remove()
    }
  }, fixTitle:function() {
    var $e = this.$element;
    if($e.attr("title") || typeof $e.attr("original-title") != "string") {
      $e.attr("original-title", $e.attr("title") || "").removeAttr("title")
    }
  }, getTitle:function() {
    var title, $e = this.$element, o = this.options;
    this.fixTitle();
    var title, o = this.options;
    if(typeof o.title == "string") {
      title = $e.attr(o.title == "title" ? "original-title" : o.title)
    }else {
      if(typeof o.title == "function") {
        title = o.title.call($e[0])
      }
    }
    title = ("" + title).replace(/(^\s*|\s*$)/, "");
    return title || o.fallback
  }, tip:function() {
    if(!this.$tip) {
      this.$tip = $('<div class="tipsy"></div>').html('<div class="tipsy-arrow"></div><div class="tipsy-inner"></div>')
    }
    return this.$tip
  }, validate:function() {
    if(!this.$element[0].parentNode) {
      this.hide();
      this.$element = null;
      this.options = null
    }
  }, enable:function() {
    this.enabled = true
  }, disable:function() {
    this.enabled = false
  }, toggleEnabled:function() {
    this.enabled = !this.enabled
  }};
  $.fn.tipsy = function(options) {
    if(options === true) {
      return this.data("tipsy")
    }else {
      if(typeof options == "string") {
        var tipsy = this.data("tipsy");
        if(tipsy) {
          tipsy[options]()
        }
        return this
      }
    }
    options = $.extend({}, $.fn.tipsy.defaults, options);
    function get(ele) {
      var tipsy = $.data(ele, "tipsy");
      if(!tipsy) {
        tipsy = new Tipsy(ele, $.fn.tipsy.elementOptions(ele, options));
        $.data(ele, "tipsy", tipsy)
      }
      return tipsy
    }
    function enter() {
      var tipsy = get(this);
      tipsy.hoverState = "in";
      if(options.delayIn == 0) {
        tipsy.show()
      }else {
        tipsy.fixTitle();
        setTimeout(function() {
          if(tipsy.hoverState == "in") {
            tipsy.show()
          }
        }, options.delayIn)
      }
    }
    function leave() {
      var tipsy = get(this);
      tipsy.hoverState = "out";
      if(options.delayOut == 0) {
        tipsy.hide()
      }else {
        setTimeout(function() {
          if(tipsy.hoverState == "out") {
            tipsy.hide()
          }
        }, options.delayOut)
      }
    }
    if(!options.live) {
      this.each(function() {
        get(this)
      })
    }
    if(options.trigger != "manual") {
      var binder = options.live ? "live" : "bind", eventIn = options.trigger == "hover" ? "mouseenter" : "focus", eventOut = options.trigger == "hover" ? "mouseleave" : "blur";
      this[binder](eventIn, enter)[binder](eventOut, leave)
    }
    return this
  };
  $.fn.tipsy.defaults = {className:null, delayIn:0, delayOut:0, fade:false, fallback:"", gravity:"n", html:false, live:false, offset:0, opacity:0.8, title:"title", trigger:"hover"};
  $.fn.tipsy.elementOptions = function(ele, options) {
    return $.metadata ? $.extend({}, options, $(ele).metadata()) : options
  };
  $.fn.tipsy.autoNS = function() {
    return $(this).offset().top > $(document).scrollTop() + $(window).height() / 2 ? "s" : "n"
  };
  $.fn.tipsy.autoWE = function() {
    return $(this).offset().left > $(document).scrollLeft() + $(window).width() / 2 ? "e" : "w"
  };
  $.fn.tipsy.autoBounds = function(margin, prefer) {
    return function() {
      var dir = {ns:prefer[0], ew:prefer.length > 1 ? prefer[1] : false}, boundTop = $(document).scrollTop() + margin, boundLeft = $(document).scrollLeft() + margin, $this = $(this);
      if($this.offset().top < boundTop) {
        dir.ns = "n"
      }
      if($this.offset().left < boundLeft) {
        dir.ew = "w"
      }
      if($(window).width() + $(document).scrollLeft() - $this.offset().left < margin) {
        dir.ew = "e"
      }
      if($(window).height() + $(document).scrollTop() - $this.offset().top < margin) {
        dir.ns = "s"
      }
      return dir.ns + (dir.ew ? dir.ew : "")
    }
  }
})(jQuery);
(function($) {
  $.fn.jqm = function(o) {
    var p = {overlay:50, overlayClass:"jqmOverlay", closeClass:"jqmClose", trigger:".jqModal", ajax:F, ajaxText:"", target:F, modal:F, toTop:F, onShow:F, onHide:F, onLoad:F};
    return this.each(function() {
      if(this._jqm) {
        return H[this._jqm].c = $.extend({}, H[this._jqm].c, o)
      }
      s++;
      this._jqm = s;
      H[s] = {c:$.extend(p, $.jqm.params, o), a:F, w:$(this).addClass("jqmID" + s), s:s};
      if(p.trigger) {
        $(this).jqmAddTrigger(p.trigger)
      }
    })
  };
  $.fn.jqmAddClose = function(e) {
    return hs(this, e, "jqmHide")
  };
  $.fn.jqmAddTrigger = function(e) {
    return hs(this, e, "jqmShow")
  };
  $.fn.jqmShow = function(t) {
    return this.each(function() {
      t = t || window.event;
      $.jqm.open(this._jqm, t)
    })
  };
  $.fn.jqmHide = function(t) {
    return this.each(function() {
      t = t || window.event;
      $.jqm.close(this._jqm, t)
    })
  };
  $.jqm = {hash:{}, open:function(s, t) {
    var h = H[s], c = h.c, cc = "." + c.closeClass, z = parseInt(h.w.css("z-index")), z = z > 0 ? z : 3E3, o = $("<div></div>").css({height:"100%", width:"100%", position:"fixed", left:0, top:0, "z-index":z - 1, opacity:c.overlay / 100});
    if(h.a) {
      return F
    }
    h.t = t;
    h.a = true;
    h.w.css("z-index", z);
    if(c.modal) {
      if(!A[0]) {
        L("bind")
      }
      A.push(s)
    }else {
      if(c.overlay > 0) {
        h.w.jqmAddClose(o)
      }else {
        o = F
      }
    }
    h.o = o ? o.addClass(c.overlayClass).prependTo("body").fadeIn() : F;
    if(ie6) {
      $("html,body").css({height:"100%", width:"100%"});
      if(o) {
        o = o.css({position:"absolute"})[0];
        for(var y in{Top:1, Left:1}) {
          o.style.setExpression(y.toLowerCase(), "(_=(document.documentElement.scroll" + y + " || document.body.scroll" + y + "))+'px'")
        }
      }
    }
    if(c.ajax) {
      var r = c.target || h.w, u = c.ajax, r = typeof r == "string" ? $(r, h.w) : $(r), u = u.substr(0, 1) == "@" ? $(t).attr(u.substring(1)) : u;
      r.html(c.ajaxText).load(u, function() {
        if(c.onLoad) {
          c.onLoad.call(this, h)
        }
        if(cc) {
          h.w.jqmAddClose($(cc, h.w))
        }
        e(h)
      })
    }else {
      if(cc) {
        h.w.jqmAddClose($(cc, h.w))
      }
    }
    if(c.toTop && h.o) {
      h.w.before('<span id="jqmP' + h.w[0]._jqm + '"></span>').insertAfter(h.o)
    }
    c.onShow ? c.onShow(h) : h.w.show();
    e(h);
    return F
  }, close:function(s) {
    var h = H[s];
    if(!h.a) {
      return F
    }
    h.a = F;
    if(A[0]) {
      A.pop();
      if(!A[0]) {
        L("unbind")
      }
    }
    if(h.c.toTop && h.o) {
      $("#jqmP" + h.w[0]._jqm).after(h.w).remove()
    }
    if(h.c.onHide) {
      h.c.onHide(h)
    }else {
      h.w.fadeOut();
      if(h.o) {
        h.o.remove()
      }
    }
    return F
  }, params:{}};
  var s = 0, H = $.jqm.hash, A = [], ie6 = $.browser.msie && $.browser.version == "6.0", F = false, i = $('<iframe src="javascript:false;document.write(\'\');" class="jqm"></iframe>').css({opacity:0}), e = function(h) {
    if(ie6) {
      if(h.o) {
        h.o.html('<p style="width:100%;height:100%"/>').prepend(i)
      }else {
        if(!$("iframe.jqm", h.w)[0]) {
          h.w.prepend(i)
        }
      }
    }
    f(h)
  }, f = function(h) {
    try {
      $(":input:visible", h.w)[0].focus()
    }catch(_) {
    }
  }, L = function(t) {
    $()[t]("keypress", m)[t]("keydown", m)[t]("mousedown", m)
  }, m = function(e) {
    var h = H[A[A.length - 1]], r = !$(e.target).parents(".jqmID" + h.s)[0];
    if(r) {
      f(h)
    }
    return!r
  }, hs = function(w, t, c) {
    return w.each(function() {
      var s = this._jqm;
      $(t).each(function() {
        if(!this[c]) {
          this[c] = [];
          $(this).click(function() {
            for(var i in{jqmShow:1, jqmHide:1}) {
              for(var s in this[i]) {
                if(H[this[i][s]]) {
                  H[this[i][s]].w[i](this)
                }
              }
            }
            return F
          })
        }
        this[c].push(s)
      })
    })
  }
})(jQuery);
(function($, window, undefined) {
  "$:nomunge";
  var str_hashchange = "hashchange", doc = document, fake_onhashchange, special = $.event.special, doc_mode = doc.documentMode, supports_onhashchange = "on" + str_hashchange in window && (doc_mode === undefined || doc_mode > 7);
  function get_fragment(url) {
    url = url || location.href;
    return"#" + url.replace(/^[^#]*#?(.*)$/, "$1")
  }
  $.fn[str_hashchange] = function(fn) {
    return fn ? this.bind(str_hashchange, fn) : this.trigger(str_hashchange)
  };
  $.fn[str_hashchange].delay = 50;
  special[str_hashchange] = $.extend(special[str_hashchange], {setup:function() {
    if(supports_onhashchange) {
      return false
    }
    $(fake_onhashchange.start)
  }, teardown:function() {
    if(supports_onhashchange) {
      return false
    }
    $(fake_onhashchange.stop)
  }});
  fake_onhashchange = function() {
    var self = {}, timeout_id, last_hash = get_fragment(), fn_retval = function(val) {
      return val
    }, history_set = fn_retval, history_get = fn_retval;
    self.start = function() {
      timeout_id || poll()
    };
    self.stop = function() {
      timeout_id && clearTimeout(timeout_id);
      timeout_id = undefined
    };
    function poll() {
      var hash = get_fragment(), history_hash = history_get(last_hash);
      if(hash !== last_hash) {
        history_set(last_hash = hash, history_hash);
        $(window).trigger(str_hashchange)
      }else {
        if(history_hash !== last_hash) {
          location.href = location.href.replace(/#.*/, "") + history_hash
        }
      }
      timeout_id = setTimeout(poll, $.fn[str_hashchange].delay)
    }
    $.browser.msie && !supports_onhashchange && function() {
      var iframe, iframe_src;
      self.start = function() {
        if(!iframe) {
          iframe_src = $.fn[str_hashchange].src;
          iframe_src = iframe_src && iframe_src + get_fragment();
          iframe = $('<iframe tabindex="-1" title="empty"/>').hide().one("load", function() {
            iframe_src || history_set(get_fragment());
            poll()
          }).attr("src", iframe_src || "javascript:0").insertAfter("body")[0].contentWindow;
          doc.onpropertychange = function() {
            try {
              if(event.propertyName === "title") {
                iframe.document.title = doc.title
              }
            }catch(e) {
            }
          }
        }
      };
      self.stop = fn_retval;
      history_get = function() {
        return get_fragment(iframe.location.href)
      };
      history_set = function(hash, history_hash) {
        var iframe_doc = iframe.document, domain = $.fn[str_hashchange].domain;
        if(hash !== history_hash) {
          iframe_doc.title = doc.title;
          iframe_doc.open();
          domain && iframe_doc.write('<script>document.domain="' + domain + '"<\/script>');
          iframe_doc.close();
          iframe.location.hash = hash
        }
      }
    }();
    return self
  }()
})(jQuery, this);
$(window).ready(function() {
  setTimeout(function() {
    window.scrollTo(0, 1)
  }, 0)
});
$(document).ready(function() {
  doInView();
  if(!$.browser.mobile) {
    modalOverlay();
    $("#project-images a").tipsy({gravity:"s", fade:true})
  }else {
    $("#project-images a").click(function(e) {
      e.preventDefault()
    })
  }
  $("#page-header nav, .up-down, p").localScroll({queue:true, duration:1500, hash:true, easing:"easeOutBounce", onBefore:function(e, anchor, $target) {
  }, onAfter:function(anchor, settings) {
    var hash = window.location.hash;
    $("#page-header nav a").removeClass("active");
    $("#page-header nav a[href=" + hash + "]").addClass("active")
  }});
  $(".up-down").css({"opacity":0.2});
  $(".row").not(".jqmWindow").each(function() {
    var the_row = $(this);
    var up_down = the_row.find($(".up-down"));
    the_row.mouseenter(function() {
      up_down.animate({"opacity":1}, 100)
    });
    the_row.mouseleave(function() {
      up_down.animate({"opacity":0.2}, 100)
    })
  });
  $("#project-images img").fadeTo(100, 0.2);
  $("#work .section-nav a").each(function() {
    var the_nav = $(this);
    $(this).click(function(e) {
      $("*").removeClass("active-project");
      e.preventDefault();
      var the_link = $(this);
      $("#work .section-nav a").removeClass("active");
      the_link.addClass("active");
      var skill_type = the_link.attr("rel");
      $("#project-images img").animate({"opacity":0.2}, 100, function() {
        $("#project-images img." + skill_type).addClass("active-project").animate({"opacity":1}, 100, function() {
        })
      })
    })
  })
});
function scaleText() {
  var $body = $("body");
  var setBodyScale = function() {
    var scaleSource = $body.width(), scaleFactor = 0.35, maxScale = 300, minScale = 100;
    var fontSize = scaleSource * scaleFactor;
    if(fontSize > maxScale) {
      fontSize = maxScale
    }
    if(fontSize < minScale) {
      fontSize = minScale
    }
    $("#intro h2").css("font-size", fontSize + "%")
  };
  $(window).resize(function() {
    setBodyScale()
  });
  setBodyScale()
}
function doInView() {
  $("article.row").bind("inview", function(event, visible) {
    if(visible == true) {
      $("#page-header nav a").removeClass("active");
      $("#page-header nav a[href=#" + $(this).attr("id") + "]").addClass("active")
    }
  })
}
function modalOverlay() {
  if(!$("html").hasClass("touch")) {
    $("#project-display").jqm({ajax:"@rel", trigger:".overlay", onShow:showDialog, onHide:hideDialog})
  }
}
var showDialog = function(hash) {
  hash.w.fadeIn(100, function() {
    $(".up-down a").fadeOut(100)
  })
};
var hideDialog = function(hash) {
  hash.w.fadeOut("2000", function() {
    hash.o.remove();
    $(".up-down a").fadeIn(500)
  })
};